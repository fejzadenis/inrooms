rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === Helper Functions ===
    function areUsersConnected(userId1, userId2) {
      let user1Doc = get(/databases/$(database)/documents/users/$(userId1));
      let user2Doc = get(/databases/$(database)/documents/users/$(userId2));

      let user1Connections = user1Doc.exists && user1Doc.data.connections is list ? user1Doc.data.connections : [];
      let user2Connections = user2Doc.exists && user2Doc.data.connections is list ? user2Doc.data.connections : [];

      return user1Doc.exists && user2Doc.exists &&
             (user1Connections.has(userId2) || user2Connections.has(userId1));
    }


    // === USERS ===
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['connections']) &&
          request.resource.data.connections.has(request.auth.uid)
        )
      );
      allow delete: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === NETWORK PROFILES ===
    match /network_profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // === CONNECTION REQUESTS ===
    match /connection_requests/{requestId} {
      allow read: if request.auth != null && (
        resource.data.fromUserId == request.auth.uid ||
        resource.data.toUserId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
      allow create: if request.auth != null && request.resource.data.fromUserId == request.auth.uid;
      allow update, delete: if request.auth != null && (
        resource.data.fromUserId == request.auth.uid ||
        resource.data.toUserId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === CHATS ===
    match /chats/{chatId} {
    allow read: if request.auth != null && (
      request.auth.uid in resource.data.participants ||
      request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
      request.auth.token.email == 'admin@inrooms.com'
    );

    allow create: if request.auth != null &&
      request.resource.data.participants is list &&
      request.resource.data.participants.size() == 2 &&
      request.auth.uid in request.resource.data.participants &&
      (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        areUsersConnected(
          request.resource.data.participants[0],
          request.resource.data.participants[1]
        )
      );


    allow update: if request.auth != null && (
      request.auth.uid in resource.data.participants ||
      request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
      request.auth.token.email == 'admin@inrooms.com'
    );
  }


    // === MESSAGES ===
    match /messages/{messageId} {
      allow read: if request.auth != null && (
        resource.data.chatId != null &&
        getChatParticipants(resource.data.chatId).has(request.auth.uid)
      ) || request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
         request.auth.token.email == 'admin@inrooms.com';

      allow create: if request.auth != null &&
        request.resource.data.chatId != null &&
        request.resource.data.senderId != null &&
        request.resource.data.receiverId != null &&
        request.auth.uid == request.resource.data.senderId &&
        getChatParticipants(request.resource.data.chatId).has(request.resource.data.senderId) &&
        getChatParticipants(request.resource.data.chatId).has(request.resource.data.receiverId);

      allow update: if request.auth != null && (
        resource.data.chatId != null &&
        getChatParticipants(resource.data.chatId).has(request.auth.uid) &&
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']) ||
          (request.auth.uid == resource.data.senderId &&
           request.time < resource.data.timestamp + duration.value(5, 'm'))
        )
      ) || request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
           request.auth.token.email == 'admin@inrooms.com';
    }

    // === NOTIFICATIONS ===
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
    }

    match /achievements/{id} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    match /badges/{id} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === EVENTS ===
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null &&
        (request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
         request.auth.token.email == 'admin@inrooms.com');
      allow update: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['current_participants']) &&
          request.resource.data.current_participants == resource.data.current_participants + 1
        )
      );
    }

    // === REGISTRATIONS ===
    match /registrations/{registrationId} {
      allow read, update, delete: if request.auth != null && (
        ('userId' in resource.data && resource.data.userId == request.auth.uid) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && (
        ('userId' in request.resource.data && request.resource.data.userId == request.auth.uid) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === REMINDERS ===
    match /reminders/{reminderId} {
      allow read, write, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === DEMOS ===
    match /demos/{demoId} {
      allow read: if request.auth != null;

      allow create: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.hostId == request.auth.uid &&
          (
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscription.status == 'active' ||
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
          )
        )
      );

      allow update: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        resource.data.hostId == request.auth.uid ||
        (
          resource.data.status == 'completed' &&
          request.resource.data.diff(resource.data).affectedKeys().hasAny([
            'recordingUrl', 'recordingDuration', 'thumbnailUrl',
            'visibilityDuration', 'visibilityExpiresAt', 'recordingUploadedAt'
          ]) &&
          (
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscription.status == 'active' ||
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
          )
        )
      );

      allow delete: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        resource.data.hostId == request.auth.uid
      );
    }

    // === DEMO REGISTRATIONS ===
    match /demo_registrations/{registrationId} {
      allow read, update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/demos/$(resource.data.demoId)).data.hostId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }
  }
}
