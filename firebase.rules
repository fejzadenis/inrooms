rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // === Helper Functions ===
    function areUsersConnected(userId1, userId2) {
      let user1Doc = get(/databases/$(database)/documents/users/$(userId1));
      let user2Doc = get(/databases/$(database)/documents/users/$(userId2));
      
      let user1Connections = user1Doc.exists && 'connections' in user1Doc.data && user1Doc.data.connections is list 
        ? user1Doc.data.connections 
        : [];
      let user2Connections = user2Doc.exists && 'connections' in user2Doc.data && user2Doc.data.connections is list 
        ? user2Doc.data.connections 
        : [];
      
      return user1Doc.exists && user2Doc.exists &&
             userId1 in user2Connections && userId2 in user1Connections;
    }

    function getChatParticipants(chatId) {
      return get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }

    // === User Profiles ===
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['connections']) &&
          request.auth.uid in request.resource.data.connections
        )
      );
      allow delete: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Network Profiles ===
    match /network_profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // === Connection Requests ===
    match /connection_requests/{requestId} {
      allow read: if request.auth != null && (
        resource.data.fromUserId == request.auth.uid ||
        resource.data.toUserId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
      allow create: if request.auth != null && request.resource.data.fromUserId == request.auth.uid;
      allow update, delete: if request.auth != null && (
        resource.data.fromUserId == request.auth.uid ||
        resource.data.toUserId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Messages ===
    match /messages/{messageId} {
      allow read: if request.auth != null && (
        (resource.data.chatId != null &&
         request.auth.uid in getChatParticipants(resource.data.chatId)) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && 
        request.resource.data.chatId != null &&
        request.resource.data.senderId != null &&
        request.resource.data.receiverId != null &&
        request.auth.uid == request.resource.data.senderId &&
        request.resource.data.senderId in getChatParticipants(request.resource.data.chatId) &&
        request.resource.data.receiverId in getChatParticipants(request.resource.data.chatId);

      allow update: if request.auth != null && (
        (resource.data.chatId != null &&
         request.auth.uid in getChatParticipants(resource.data.chatId) &&
         (
           request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']) ||
           (request.auth.uid == resource.data.senderId &&
            request.time < resource.data.timestamp + duration.value(5, 'm'))
         )) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Chats ===
    match /chats/{chatId} {
      allow read: if request.auth != null && (
        request.auth.uid in resource.data.participants ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && (
        request.auth.uid in request.resource.data.participants &&
        (
          request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
          request.auth.token.email == 'admin@inrooms.com' ||
          (
            request.resource.data.participants.size() == 2 &&
            areUsersConnected(request.resource.data.participants[0], request.resource.data.participants[1])
          )
        )
      );

      allow update: if request.auth != null && (
        request.auth.uid in resource.data.participants ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Notifications ===
    match /notifications/{notificationId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // === Achievements / Badges ===
    match /achievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    match /badges/{badgeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Events ===
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
      allow update: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['current_participants']) &&
          request.resource.data.current_participants == resource.data.current_participants + 1
        )
      );
    }

    // === Registrations ===
    match /registrations/{registrationId} {
      allow read: if request.auth != null && (
        ('userId' in resource.data && resource.data.userId == request.auth.uid) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      allow update, delete: if request.auth != null && (
        ('userId' in resource.data && resource.data.userId == request.auth.uid) ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Reminders ===
    match /reminders/{reminderId} {
      allow read, write: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }

    // === Demos ===
    match /demos/{demoId} {
      allow read: if request.auth != null;

      allow create: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        (
          request.resource.data.hostId == request.auth.uid &&
          (
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscription.status == 'active' ||
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
          )
        )
      );

      allow update: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        resource.data.hostId == request.auth.uid ||
        (
          resource.data.status == 'completed' &&
          request.resource.data.diff(resource.data).affectedKeys().hasAny([
            'recordingUrl', 'recordingDuration', 'thumbnailUrl',
            'visibilityDuration', 'visibilityExpiresAt', 'recordingUploadedAt'
          ]) &&
          (
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscription.status == 'active' ||
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
          )
        )
      );

      allow delete: if request.auth != null && (
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com' ||
        resource.data.hostId == request.auth.uid
      );
    }

    // === Demo Registrations ===
    match /demo_registrations/{registrationId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/demos/$(resource.data.demoId)).data.hostId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );

      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/demos/$(resource.data.demoId)).data.hostId == request.auth.uid ||
        request.auth.uid == 'uJLXftk0DCYd2ujOjxX30zETSm33' ||
        request.auth.token.email == 'admin@inrooms.com'
      );
    }
  }
}
